import pandas as pd
import numpy as np

df_subj = pd.read_csv('../data/lbq_selectedcolumns_aug2023.csv')

gender_map = {
    'Female': 'female',
    'Male': 'male',
    'male': 'male',
    'woman': 'female',
    'Woman': 'female',
    'female': 'female',
    'Man': 'male',
    'Non-binary': 'non-binary',
    'Nonbinary': 'non-binary',
    'girl': 'female',
    'CIS FEMALE': 'female',
    'Female / indifferent': 'female',
    'Male/Man': 'male',
    'FEMALE': 'female',
    'women': 'female',
    'cisgender female': 'female',
    'Cis she/her': 'female',
    'Trans-masculine': 'male',
    'Male, Non-Binary': 'male',
    'non-binary, assigned female at birth': 'non-binary',
    'Genderfluid': 'non-binary',
    'non-binary': 'non-binary',
    'Girl (she/her)': 'female',
    'Female (pronouns any)': 'female',
    'woman; she/her': 'female',
    'Cisgender Female': 'female',
    'Male He/His/Him': 'male',
    'Women': 'female',
    'femail': 'female',
    'M': 'male',
    'Download gender.json [10 MB] (nonbinary)': 'non-binary',
    'F': 'female',
    'Cis female': 'female',
    'Nonbinary Female': 'non-binary',
    'nonbinary': 'non-binary',
    'Agender/Nonbinary': 'non-binary',
    'Nonbinary/genderfluid': 'non-binary',
    'Female/woman': 'female',
    'Trans male': 'male',
    'she/her': 'female',
    'male (cis)': 'male',
    'demigirl': 'other',
    'Non-binary/Woman': 'non-binary',
    'genderfluid': 'non-binary',
    'cisgender woman': 'female',
    'She/Her': 'female',
    'Iâ€™m a male, Im a guy, I was born a male. I am a male': 'male',
    'Non-binary/woman': 'non-binary',
    'Female.': 'female',
    'Femail': 'female',
    'Rather not say': 'other',
    'Female she/her': 'female',
    'Femals': 'female',
    'cisgender': 'other',
    'Cisgender Male': 'male',
    'non binary': 'non-binary',
    'She/her': 'female',
    'Trans-masc': 'male',
    'queer': 'other',
    'Make': 'male',
    'Female (she/her)': 'female',
    'Complicated': 'other',
    'Girl': 'female',
    'Prefer not to answer': 'other',
    'Cis Woman': 'female',
    'MALE': 'male',
    'He him': 'male',
    'WOMEN': 'female',
    'man; male': 'male',
    'Non binary': 'non-binary',
    'non-binary (neutrois)': 'non-binary',
    'Fluid': 'non-binary',
    'Non Binary': 'non-binary',
    'Woman, Straight': 'female',
    'male/hetero': 'male',
    'Assigned female at birth, non-binary': 'non-binary',
    'Prefer not to say': 'other',
    'Not specified': 'other',
    'woman/cisgender': 'female',
    'woman/female': 'female',
    'm': 'male',
    'Female (She/Her)': 'female',
    'Nah': 'other',
    'cis': 'other',
    'Gender fluid': 'non-binary',
    'cis male': 'male',
    'Non-binary trans-femme': 'non-binary',
    'Transgender Non-binary': 'non-binary',
    'Heterosexual Male': 'male',
    'nonbinary-male': 'non-binary',
    'Cis-Gender Female': 'female',
    'Cis male': 'male',
    'he/him': 'male',
    'Heterosexual': 'other',
    'female/woman': 'female',
    'nonbinary - assigned female at birth': 'non-binary',
    'Mayo': 'other',
    'Male (transgender)': 'male',
    'female/non-binary': 'female',
    'cisgender male (he/him)': 'male',
    'Women/non-binary': 'female',
    'he/him/his': 'male',
    'NB': 'non-binary',
    'female she/her': 'female',
    'Woman/Female': 'female',
    "Female/Non-binary... haven't figured it out yet.": 'other',
    'transmasculine nonbinary': 'non-binary',
    'rather not say': 'other',
    'Cisgender woman': 'female',
    'Femala': 'female',
    'man': 'male',
    'He/Him': 'male',
    'Transgender non-binaty': 'non-binary',
    'Cisgender female': 'female',
    'Japanese': 'other',
    'Femal': 'female',
    'Femenine': 'female',
    'Male (He/Him)': 'male',
    'He/Him - Male': 'male',
    'nonbinary, genderqueer': 'non-binary',
    'Male cisgender': 'male',
    'boy': 'male',
    'Male, Straight': 'male',
    'Preferred not to answer': 'other',
    'men': 'male',
    'f': 'female',
    'She/They': 'female',
    'Men': 'male',
    'Gender Non-Conforming': 'other',
    'Woman Lite': 'female',
    np.nan: 'other'
}

df_subj['GENDER'] = df_subj['Gender'].apply(lambda x: gender_map[x])


def get_en_age_of_acquisition(langs, aoas):
    if pd.isna(langs) or pd.isna(aoas):
        return -1

    langs = [lang.strip().lower() for lang in langs.strip().split(sep=', ')]
    aoas = [aoa.strip().lower() for aoa in aoas.strip().split(sep=', ')]

    en_aoa = -1
    for lang, aoa in zip(langs, aoas):
        if 'english' in lang:
            en_aoa = aoa
            break

    return en_aoa

df_subj['EN_AOA'] = df_subj.apply(lambda df: get_en_age_of_acquisition(df['languagelist'], df['AofExposure']), axis=1)
df_subj.to_csv('../data/participants_aug2023.csv', index=False)
print(df_subj)
